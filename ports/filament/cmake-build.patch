diff --git a/CMakeLists.txt b/CMakeLists.txt
index a979145c0..6fbccdba5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -311,10 +311,6 @@ if (ANDROID)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Werror=unguarded-availability")
 endif()
 
-if (CYGWIN)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-exceptions -fno-rtti")
-endif()
-
 if (MSVC)
     # Since the "secure" replacements that MSVC suggests are not portable, disable
     # the deprecation warnings. Also disable warnings about use of POSIX functions (i.e. "unlink").
@@ -345,24 +341,6 @@ if (NOT MSVC AND NOT IOS)
     set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffunction-sections -fdata-sections")
 endif()
 
-# On Android RELEASE builds, we disable exceptions and RTTI to save some space (about 75 KiB
-# saved by -fno-exception and 10 KiB saved by -fno-rtti).
-if (ANDROID OR IOS OR WEBGL)
-    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-exceptions -fno-rtti")
-
-    if (ANDROID OR WEBGL)
-        # Omitting unwind info prevents the generation of readable stack traces in crash reports on iOS
-        set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-unwind-tables -fno-asynchronous-unwind-tables")
-    endif()
-endif()
-
-# With WebGL, we disable RTTI even for debug builds because we pass emscripten::val back and forth
-# between C++ and JavaScript in order to efficiently access typed arrays, which are unbound.
-# NOTE: This is not documented in emscripten so we should consider a different approach.
-if (WEBGL)
-    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-rtti")
-endif()
-
 if (WEBGL_PTHREADS)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
 endif()
@@ -491,6 +469,7 @@ if (FILAMENT_SUPPORTS_VULKAN)
 endif()
 if (FILAMENT_SUPPORTS_METAL)
     set(MATC_API_FLAGS ${MATC_API_FLAGS} -a metal)
+    set(MATC_OPT_FLAGS -g) # material optimizations causes rendering artifacts on METAL
 endif()
 
 # Disable optimizations and enable debug info (preserves names in SPIR-V)
@@ -645,7 +624,6 @@ endfunction()
 
 # Common to all platforms
 add_subdirectory(${EXTERNAL}/libgtest/tnt)
-add_subdirectory(${LIBRARIES}/camutils)
 add_subdirectory(${LIBRARIES}/filabridge)
 add_subdirectory(${LIBRARIES}/filaflat)
 add_subdirectory(${LIBRARIES}/filagui)
@@ -666,15 +644,12 @@ add_subdirectory(${FILAMENT}/shaders)
 add_subdirectory(${EXTERNAL}/basisu/tnt)
 add_subdirectory(${EXTERNAL}/civetweb/tnt)
 add_subdirectory(${EXTERNAL}/hat-trie/tnt)
-add_subdirectory(${EXTERNAL}/imgui/tnt)
 add_subdirectory(${EXTERNAL}/robin-map/tnt)
 add_subdirectory(${EXTERNAL}/smol-v/tnt)
 add_subdirectory(${EXTERNAL}/benchmark/tnt)
 add_subdirectory(${EXTERNAL}/meshoptimizer/tnt)
 add_subdirectory(${EXTERNAL}/cgltf/tnt)
-add_subdirectory(${EXTERNAL}/draco/tnt)
 add_subdirectory(${EXTERNAL}/jsmn/tnt)
-add_subdirectory(${EXTERNAL}/stb/tnt)
 add_subdirectory(${EXTERNAL}/getopt)
 
 if (FILAMENT_BUILD_FILAMAT OR IS_HOST_PLATFORM)
@@ -698,11 +673,6 @@ endif()
 
 set(FILAMENT_SAMPLES_BINARY_DIR ${PROJECT_BINARY_DIR}/samples)
 
-if (WEBGL)
-    add_subdirectory(web/filament-js)
-    add_subdirectory(web/samples)
-endif()
-
 if (IS_HOST_PLATFORM)
     if (FILAMENT_SUPPORTS_OPENGL)
         add_subdirectory(${LIBRARIES}/bluegl)
@@ -714,10 +684,6 @@ if (IS_HOST_PLATFORM)
 
     add_subdirectory(${FILAMENT}/samples)
 
-    add_subdirectory(${EXTERNAL}/libassimp/tnt)
-    add_subdirectory(${EXTERNAL}/libpng/tnt)
-    add_subdirectory(${EXTERNAL}/libsdl2/tnt)
-    add_subdirectory(${EXTERNAL}/libz/tnt)
     add_subdirectory(${EXTERNAL}/tinyexr/tnt)
 
     add_subdirectory(${TOOLS}/cmgen)
@@ -735,7 +701,3 @@ if (IS_HOST_PLATFORM)
     add_subdirectory(${TOOLS}/uberz)
 endif()
 
-# Generate exported executables for cross-compiled builds (Android, WebGL, and iOS)
-if (NOT CMAKE_CROSSCOMPILING)
-    export(TARGETS matc cmgen filamesh mipgen resgen uberz glslminifier FILE ${IMPORT_EXECUTABLES})
-endif()
diff --git a/filament/CMakeLists.txt b/filament/CMakeLists.txt
index 31147660f..445f05710 100644
--- a/filament/CMakeLists.txt
+++ b/filament/CMakeLists.txt
@@ -606,7 +606,7 @@ target_link_libraries(${TARGET} PRIVATE
 # Installation
 # ==================================================================================================
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/filament DESTINATION include)
 install(FILES "README.md" DESTINATION .)
 install(FILES "../LICENSE" DESTINATION .)
diff --git a/filament/backend/CMakeLists.txt b/filament/backend/CMakeLists.txt
index 624e41ba7..23ca54a6a 100644
--- a/filament/backend/CMakeLists.txt
+++ b/filament/backend/CMakeLists.txt
@@ -374,8 +374,8 @@ target_link_libraries(${TARGET} PRIVATE
 # Installation
 # ==================================================================================================
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
-install(TARGETS vkshaders ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib)
+install(TARGETS vkshaders ${INSTALL_TYPE} DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/backend DESTINATION include)
 
 # ==================================================================================================
@@ -435,7 +435,7 @@ if (APPLE)
     set(BACKEND_TEST_LIB_NAME ${CMAKE_STATIC_LIBRARY_PREFIX}backend_test${CMAKE_STATIC_LIBRARY_SUFFIX})
 
     if (INSTALL_BACKEND_TEST)
-        install(FILES "${BACKEND_TEST_COMBINED_OUTPUT}" DESTINATION lib/${DIST_DIR} RENAME ${BACKEND_TEST_LIB_NAME})
+        install(FILES "${BACKEND_TEST_COMBINED_OUTPUT}" DESTINATION lib RENAME ${BACKEND_TEST_LIB_NAME})
         install(FILES test/PlatformRunner.h DESTINATION include/backend_test)
     endif()
 
diff --git a/libs/filabridge/CMakeLists.txt b/libs/filabridge/CMakeLists.txt
index ffcd1ce23..ab103af5c 100644
--- a/libs/filabridge/CMakeLists.txt
+++ b/libs/filabridge/CMakeLists.txt
@@ -32,4 +32,4 @@ target_link_libraries(${TARGET} backend_headers)
 # Installation
 # ==================================================================================================
 install(DIRECTORY ${PUBLIC_HDR_DIR}/filament DESTINATION include)
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
diff --git a/libs/filaflat/CMakeLists.txt b/libs/filaflat/CMakeLists.txt
index 0ebf53e06..d368d2a4f 100644
--- a/libs/filaflat/CMakeLists.txt
+++ b/libs/filaflat/CMakeLists.txt
@@ -35,4 +35,4 @@ endif()
 # ==================================================================================================
 # We do not need filaflat headers in the install directory
 # install(DIRECTORY ${PUBLIC_HDR_DIR}/filaflat DESTINATION include)
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
diff --git a/libs/filagui/CMakeLists.txt b/libs/filagui/CMakeLists.txt
index 8e63b0ee5..318a5612a 100644
--- a/libs/filagui/CMakeLists.txt
+++ b/libs/filagui/CMakeLists.txt
@@ -80,7 +80,8 @@ include_directories(${GENERATION_ROOT})
 
 add_library(${TARGET} STATIC ${PUBLIC_HDRS} ${SRCS} ${RESGEN_SOURCE})
 
-target_link_libraries(${TARGET} PUBLIC imgui filament)
+find_package(imgui CONFIG REQUIRED)
+target_link_libraries(${TARGET} PUBLIC imgui::imgui filament)
 
 target_include_directories(${TARGET} PUBLIC ${PUBLIC_HDR_DIR})
 set_target_properties(${TARGET} PROPERTIES FOLDER Libs)
@@ -94,3 +95,9 @@ if (NOT MSVC)
             $<$<CONFIG:Release>:-ffast-math>
     )
 endif()
+
+# ==================================================================================================
+# Installation
+# ==================================================================================================
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
+install(DIRECTORY ${PUBLIC_HDR_DIR}/filagui DESTINATION include)
diff --git a/libs/filamat/CMakeLists.txt b/libs/filamat/CMakeLists.txt
index d4be03fa7..6b64e39c0 100644
--- a/libs/filamat/CMakeLists.txt
+++ b/libs/filamat/CMakeLists.txt
@@ -153,10 +153,10 @@ set(FILAMAT_COMBINED_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/libfilamat_combined.a")
 combine_static_libs(filamat "${FILAMAT_COMBINED_OUTPUT}" "${FILAMAT_DEPS}")
 
 set(FILAMAT_LIB_NAME ${CMAKE_STATIC_LIBRARY_PREFIX}filamat${CMAKE_STATIC_LIBRARY_SUFFIX})
-install(FILES "${FILAMAT_COMBINED_OUTPUT}" DESTINATION lib/${DIST_DIR} RENAME ${FILAMAT_LIB_NAME})
+install(FILES "${FILAMAT_COMBINED_OUTPUT}" DESTINATION lib RENAME ${FILAMAT_LIB_NAME})
 install(DIRECTORY ${PUBLIC_HDR_DIR}/filamat DESTINATION include)
 
-install(TARGETS filamat_lite ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS filamat_lite ARCHIVE DESTINATION lib)
 
 # ==================================================================================================
 # Tests
diff --git a/libs/filameshio/CMakeLists.txt b/libs/filameshio/CMakeLists.txt
index eab319211..4cb31bc0f 100644
--- a/libs/filameshio/CMakeLists.txt
+++ b/libs/filameshio/CMakeLists.txt
@@ -31,7 +31,7 @@ target_link_libraries(${TARGET}
 # Installation
 # ==================================================================================================
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib)
 install(FILES ${DIST_HDRS} DESTINATION include/${TARGET})
 
 # ==================================================================================================
diff --git a/libs/geometry/CMakeLists.txt b/libs/geometry/CMakeLists.txt
index 5c46eb606..4241ea008 100644
--- a/libs/geometry/CMakeLists.txt
+++ b/libs/geometry/CMakeLists.txt
@@ -42,7 +42,7 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/geometry DESTINATION include)
 
 # ==================================================================================================
diff --git a/libs/gltfio/CMakeLists.txt b/libs/gltfio/CMakeLists.txt
index 70a790e46..6444502d9 100644
--- a/libs/gltfio/CMakeLists.txt
+++ b/libs/gltfio/CMakeLists.txt
@@ -152,6 +152,9 @@ set_target_properties(uberarchive PROPERTIES FOLDER Libs)
 # Build the "core" library (no filamat)
 # ==================================================================================================
 
+find_package(stb CONFIG REQUIRED)
+find_package(draco CONFIG REQUIRED)
+
 include_directories(${PUBLIC_HDR_DIR} ${RESOURCE_DIR})
 link_libraries(math utils filament cgltf stb ktxreader geometry tsl trie uberzlib)
 
@@ -161,7 +164,7 @@ target_include_directories(gltfio_core PUBLIC ${PUBLIC_HDR_DIR})
 set_target_properties(gltfio_core PROPERTIES FOLDER Libs)
 
 target_compile_definitions(gltfio_core PUBLIC -DGLTFIO_DRACO_SUPPORTED=1)
-target_link_libraries(gltfio_core PUBLIC dracodec meshoptimizer)
+target_link_libraries(gltfio_core PUBLIC draco::draco meshoptimizer)
 
 if (WEBGL_PTHREADS)
     target_compile_definitions(gltfio_core PUBLIC -DFILAMENT_WASM_THREADS)
@@ -187,7 +190,7 @@ if (NOT WEBGL AND NOT ANDROID AND NOT IOS)
         target_compile_options(${TARGET} PRIVATE -Wno-deprecated-register)
     endif()
 
-    install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+    install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 
 endif()
 
@@ -195,6 +198,6 @@ endif()
 # Installation
 # ==================================================================================================
 
-install(TARGETS gltfio_core uberarchive ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS gltfio_core uberarchive ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/gltfio DESTINATION include)
 install(FILES ${RESOURCE_DIR}/materials/uberarchive.h DESTINATION include/gltfio/materials)
diff --git a/libs/ibl/CMakeLists.txt b/libs/ibl/CMakeLists.txt
index 23b1937cc..22ec740d9 100644
--- a/libs/ibl/CMakeLists.txt
+++ b/libs/ibl/CMakeLists.txt
@@ -59,6 +59,6 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
-install(TARGETS ${TARGET}-lite ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
+install(TARGETS ${TARGET}-lite ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/ibl DESTINATION include)
diff --git a/libs/iblprefilter/CMakeLists.txt b/libs/iblprefilter/CMakeLists.txt
index e39212e43..40e38b53f 100644
--- a/libs/iblprefilter/CMakeLists.txt
+++ b/libs/iblprefilter/CMakeLists.txt
@@ -133,5 +133,5 @@ target_link_libraries(${TARGET} PRIVATE
 # Installation
 # ==================================================================================================
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/filament-iblprefilter DESTINATION include)
diff --git a/libs/image/CMakeLists.txt b/libs/image/CMakeLists.txt
index 2d76ca148..d995487fc 100644
--- a/libs/image/CMakeLists.txt
+++ b/libs/image/CMakeLists.txt
@@ -47,7 +47,7 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/image DESTINATION include)
 
 # ==================================================================================================
diff --git a/libs/imageio/CMakeLists.txt b/libs/imageio/CMakeLists.txt
index 1971e7ffb..ac0395aa5 100644
--- a/libs/imageio/CMakeLists.txt
+++ b/libs/imageio/CMakeLists.txt
@@ -33,7 +33,10 @@ add_library(${TARGET} STATIC ${PUBLIC_HDRS} ${SRCS})
 target_include_directories(${TARGET} PUBLIC ${PUBLIC_HDR_DIR})
 set_target_properties(${TARGET} PROPERTIES FOLDER Libs)
 
-target_link_libraries(${TARGET} PUBLIC image math png tinyexr utils z basis_encoder)
+find_package(PNG REQUIRED)
+include_directories(${PNG_INCLUDE_DIR})
+
+target_link_libraries(${TARGET} PUBLIC image math ${PNG_LIBRARIES} tinyexr utils z basis_encoder)
 if (WIN32)
     target_link_libraries(${TARGET} PRIVATE wsock32)
 endif()
diff --git a/libs/ktxreader/CMakeLists.txt b/libs/ktxreader/CMakeLists.txt
index d5da5332a..fc1707733 100644
--- a/libs/ktxreader/CMakeLists.txt
+++ b/libs/ktxreader/CMakeLists.txt
@@ -42,7 +42,7 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/${TARGET} DESTINATION include)
 
 # ==================================================================================================
diff --git a/libs/matdbg/CMakeLists.txt b/libs/matdbg/CMakeLists.txt
index 071c5e9da..b8e2a84fd 100644
--- a/libs/matdbg/CMakeLists.txt
+++ b/libs/matdbg/CMakeLists.txt
@@ -121,6 +121,6 @@ set(MATDBG_COMBINED_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/libmatdbg_combined.a")
 combine_static_libs(matdbg "${MATDBG_COMBINED_OUTPUT}" "${MATDBG_DEPS}")
 
 set(MATDBG_LIB_NAME ${CMAKE_STATIC_LIBRARY_PREFIX}matdbg${CMAKE_STATIC_LIBRARY_SUFFIX})
-install(FILES "${MATDBG_COMBINED_OUTPUT}" DESTINATION lib/${DIST_DIR} RENAME ${MATDBG_LIB_NAME})
+install(FILES "${MATDBG_COMBINED_OUTPUT}" DESTINATION lib RENAME ${MATDBG_LIB_NAME})
 # We do not need matdbg headers in the install directory
 # install(DIRECTORY ${PUBLIC_HDR_DIR}/matdbg DESTINATION include)
diff --git a/libs/uberz/CMakeLists.txt b/libs/uberz/CMakeLists.txt
index 47744e225..c97d906f8 100644
--- a/libs/uberz/CMakeLists.txt
+++ b/libs/uberz/CMakeLists.txt
@@ -43,5 +43,5 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/uberz DESTINATION include)
diff --git a/libs/utils/CMakeLists.txt b/libs/utils/CMakeLists.txt
index 906f7441d..67d0cff35 100644
--- a/libs/utils/CMakeLists.txt
+++ b/libs/utils/CMakeLists.txt
@@ -122,7 +122,7 @@ endif()
 # Installation
 # ==================================================================================================
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ${INSTALL_TYPE} DESTINATION lib)
 install(FILES ${DIST_HDRS} DESTINATION include/${TARGET})
 if (ANDROID)
     install(FILES ${DIST_ANDROID_HDRS} DESTINATION include/${TARGET_LINUX})
diff --git a/libs/viewer/CMakeLists.txt b/libs/viewer/CMakeLists.txt
index 621bb2498..032536d79 100644
--- a/libs/viewer/CMakeLists.txt
+++ b/libs/viewer/CMakeLists.txt
@@ -4,6 +4,8 @@ project(viewer)
 set(TARGET viewer)
 set(PUBLIC_HDR_DIR include)
 
+find_package(imgui CONFIG REQUIRED)
+
 # ==================================================================================================
 # Sources and headers
 # ==================================================================================================
@@ -30,7 +32,7 @@ set(SRCS
 # Include and target definitions
 # ==================================================================================================
 add_library(${TARGET} STATIC ${PUBLIC_HDRS} ${SRCS})
-target_link_libraries(${TARGET} PUBLIC imgui filament gltfio_core filagui jsmn civetweb)
+target_link_libraries(${TARGET} PUBLIC imgui::imgui filament gltfio_core filagui jsmn civetweb)
 target_include_directories(${TARGET} PUBLIC ${PUBLIC_HDR_DIR})
 set_target_properties(${TARGET} PROPERTIES FOLDER Libs)
 
@@ -47,7 +49,7 @@ endif()
 # ==================================================================================================
 # Installation
 # ==================================================================================================
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
 install(DIRECTORY ${PUBLIC_HDR_DIR}/viewer DESTINATION include)
 
 # ==================================================================================================
diff --git a/shaders/CMakeLists.txt b/shaders/CMakeLists.txt
index 64e39e33c..a2c897f20 100644
--- a/shaders/CMakeLists.txt
+++ b/shaders/CMakeLists.txt
@@ -117,4 +117,4 @@ set_target_properties(${TARGET} PROPERTIES FOLDER Filament/Shaders)
 # Installation
 # ==================================================================================================
 
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
diff --git a/third_party/basisu/tnt/CMakeLists.txt b/third_party/basisu/tnt/CMakeLists.txt
index 59daa5407..228add31a 100644
--- a/third_party/basisu/tnt/CMakeLists.txt
+++ b/third_party/basisu/tnt/CMakeLists.txt
@@ -80,5 +80,5 @@ if (IS_HOST_PLATFORM)
     endif()
 endif()
 
-install(TARGETS basis_transcoder ARCHIVE DESTINATION lib/${DIST_DIR})
-install(TARGETS zstd ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS basis_transcoder ARCHIVE DESTINATION lib)
+install(TARGETS zstd ARCHIVE DESTINATION lib)
diff --git a/third_party/civetweb/tnt/CMakeLists.txt b/third_party/civetweb/tnt/CMakeLists.txt
index 074c8c1fe..633894ba3 100644
--- a/third_party/civetweb/tnt/CMakeLists.txt
+++ b/third_party/civetweb/tnt/CMakeLists.txt
@@ -34,4 +34,4 @@ target_link_libraries(${TARGET} ${CMAKE_DL_LIBS})
 
 target_compile_options(${TARGET} PRIVATE $<$<PLATFORM_ID:Linux>:-fPIC>)
 
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
diff --git a/third_party/meshoptimizer/tnt/CMakeLists.txt b/third_party/meshoptimizer/tnt/CMakeLists.txt
index ae530b24e..39157ebd0 100644
--- a/third_party/meshoptimizer/tnt/CMakeLists.txt
+++ b/third_party/meshoptimizer/tnt/CMakeLists.txt
@@ -128,4 +128,4 @@ endif()
 # ==================================================================================================
 
 set(INSTALL_TYPE ARCHIVE)
-install(TARGETS meshoptimizer ${INSTALL_TYPE} DESTINATION lib/${DIST_DIR})
+install(TARGETS meshoptimizer ${INSTALL_TYPE} DESTINATION lib)
diff --git a/third_party/smol-v/tnt/CMakeLists.txt b/third_party/smol-v/tnt/CMakeLists.txt
index 4b245d450..4352d356b 100644
--- a/third_party/smol-v/tnt/CMakeLists.txt
+++ b/third_party/smol-v/tnt/CMakeLists.txt
@@ -23,4 +23,4 @@ endif()
 target_include_directories(${TARGET} PUBLIC ${PUBLIC_HDR_DIR})
 set_target_properties(${TARGET} PROPERTIES FOLDER ThirdParty)
 
-install(TARGETS ${TARGET} ARCHIVE DESTINATION lib/${DIST_DIR})
+install(TARGETS ${TARGET} ARCHIVE DESTINATION lib)
diff --git a/tools/filamesh/CMakeLists.txt b/tools/filamesh/CMakeLists.txt
index fa97069ae..c3c2733dd 100644
--- a/tools/filamesh/CMakeLists.txt
+++ b/tools/filamesh/CMakeLists.txt
@@ -18,7 +18,10 @@ add_executable(${TARGET} ${SRCS})
 
 target_link_libraries(${TARGET} PUBLIC math)
 target_link_libraries(${TARGET} PUBLIC utils)
-target_link_libraries(${TARGET} PUBLIC assimp)
+
+find_package(assimp CONFIG REQUIRED)
+target_link_libraries(${TARGET} PUBLIC assimp::assimp)
+
 target_link_libraries(${TARGET} PRIVATE getopt filameshio meshoptimizer)
 set_target_properties(${TARGET} PROPERTIES FOLDER Tools)
 
